{"contentString":"/** \n * Returns the weighted arithmetic mean of the entries in the specified portion of the input array, or <code>Double.NaN</code> if the designated subarray is empty. <p> Throws <code>IllegalArgumentException</code> if either array is null.</p> <p> See  {@link Mean} for details on the computing algorithm. The two-pass algorithmdescribed above is used here, with weights applied in computing both the original estimate and the correction factor.</p> <p> Throws <code>IllegalArgumentException</code> if any of the following are true: <ul><li>the values array is null</li> <li>the weights array is null</li> <li>the weights array does not have the same length as the values array</li> <li>the weights array contains one or more infinite values</li> <li>the weights array contains one or more NaN values</li> <li>the weights array contains negative values</li> <li>the start and length arguments do not determine a valid array</li> </ul></p>\n * @param values the input array\n * @param weights the weights array\n * @param begin index of the first array element to include\n * @param length the number of elements to include\n * @return the mean of the values or Double.NaN if length = 0\n * @throws IllegalArgumentException if the parameters are not valid\n * @since 2.1\n */\npublic double evaluate(final double[] values,final double[] weights,final int begin,final int length){\n  if (test(values,weights,begin,length)) {\n    Sum sum=new Sum();\n    double sumw=sum.evaluate(weights,begin,length);\n    double xbarw=sum.evaluate(values,weights,begin,length) / sumw;\n    double correction=0;\n    for (int i=begin; i < begin + length; i++) {\n      correction+=weights[i] * (values[i] - xbarw);\n    }\n    return xbarw + (correction / sumw);\n  }\n  return Double.NaN;\n}\n","endLine":220,"fixedFile":"/home/xushicheng/dataset/defects4j/projects/Math/Math_41_buggy/src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java","methodName":"org.apache.commons.math.stat.descriptive.moment.Mean#double#evaluate#?,double[],double[],int,int","startLine":204}