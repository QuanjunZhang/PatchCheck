{"contentString":"/** \n * This method attempts to find two values a and b satisfying <ul> <li> <code> lowerBound <= a < initial < b <= upperBound</code> </li> <li> <code> f(a) * f(b) <= 0 </code> </li> </ul> If f is continuous on <code>[a,b],</code> this means that <code>a</code> and <code>b</code> bracket a root of f. <p> The algorithm starts by setting  <code>a := initial -1; b := initial +1,</code> examines the value of the function at <code>a</code> and <code>b</code> and keeps moving the endpoints out by one unit each time through a loop that terminates  when one of the following happens: <ul> <li> <code> f(a) * f(b) <= 0 </code> --  success!</li> <li> <code> a = lower </code> and <code> b = upper</code>  -- ConvergenceException </li> <li> <code> maximumIterations</code> iterations elapse  -- ConvergenceException </li></ul></p>\n * @param function the function\n * @param initial initial midpoint of interval being expanded tobracket a root\n * @param lowerBound lower bound (a is never lower than this value)\n * @param upperBound upper bound (b never is greater than thisvalue)\n * @param maximumIterations maximum number of iterations to perform\n * @return a two element array holding {a, b}.\n * @throws ConvergenceException if the algorithm fails to find a and bsatisfying the desired conditions\n * @throws FunctionEvaluationException if an error occurs evaluating the function\n * @throws IllegalArgumentException if function is null, maximumIterationsis not positive, or initial is not between lowerBound and upperBound\n */\npublic static double[] bracket(UnivariateRealFunction function,double initial,double lowerBound,double upperBound,int maximumIterations) throws ConvergenceException, FunctionEvaluationException {\n  if (function == null) {\n    throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n  }\n  if (maximumIterations <= 0) {\n    throw MathRuntimeException.createIllegalArgumentException(\"bad value for maximum iterations number: {0}\",maximumIterations);\n  }\n  if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n    throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n  }\n  double a=initial;\n  double b=initial;\n  double fa;\n  double fb;\n  int numIterations=0;\n  do {\n    a=Math.max(a - 1.0,lowerBound);\n    b=Math.min(b + 1.0,upperBound);\n    fa=function.value(a);\n    fb=function.value(b);\n    numIterations++;\n  }\n while ((fa * fb > 0.0) && (numIterations < maximumIterations) && ((a > lowerBound) || (b < upperBound)));\n  if (fa * fb >= 0.0) {\n    throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);\n  }\n  return new double[]{a,b};\n}\n","endLine":208,"fixedFile":"/home/xushicheng/dataset/defects4j/projects/Math/Math_85_buggy/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java","methodName":"org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double,int","startLine":168}